Процедура ОбновитьСписокАвтомобилей(АдресВременногоХранилища = Неопределено) Экспорт
	
	Попытка
		
		ВременныйФайл 		= ПолучитьИмяВременногоФайла("zip"); 
		ВременныйКаталог 	= КаталогВременныхФайлов() + Строка(Новый УникальныйИдентификатор); 
		
		Если АдресВременногоХранилища = Неопределено Тогда 
			
			ИмяИсточникаHTTP	= "https://codeload.github.com/blanzh/carsBase/zip/refs/heads/master";
		    ИмяCSVФайла 		= ВременныйКаталог + "\carsBase-master\cars.CSV"; 
		
			КопироватьФайл(ИмяИсточникаHTTP, ВременныйФайл);
		
		Иначе
		
			ДвоичныеДанные 		= ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
			ИмяCSVФайла			= ВременныйКаталог + "\parserAutoRu-master\full.сsv"; 
			ДвоичныеДанные.Записать(ВременныйФайл);
			
		КонецЕсли;
		
		ZIP = Новый ЧтениеZipФайла();
		ZIP.Открыть(ВременныйФайл);
		ZIP.ИзвлечьВсе(ВременныйКаталог);
		ZIP.Закрыть();
		
		КвалификаторСтроки 		= Новый КвалификаторыСтроки(50);
		
		ТаблицаМарокМоделей = Новый ТаблицаЗначений;
		ТаблицаМарокМоделей.Колонки.Добавить("Марка", 	Новый ОписаниеТипов("Строка", , , , КвалификаторСтроки));
		ТаблицаМарокМоделей.Колонки.Добавить("Модель", 	Новый ОписаниеТипов("Строка", , , , КвалификаторСтроки));
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(ИмяCSVФайла, КодировкаТекста.UTF8);
		
	Исключение 
		
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Некорректный формат файла.'"));
		
		Возврат;
		
	КонецПопытки;
	
	Для НомерСтроки = 2 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		
		ТекстоваяСтрока = ТекстовыйДокумент.ПолучитьСтроку(НомерСтроки);
		
		Если Не ЗначениеЗаполнено(ТекстоваяСтрока) Тогда 
			
			Продолжить;
			
		КонецЕсли;
		
		МассивЗначений 		= СтрРазделить(ТекстоваяСтрока, ";");
		
		СтрокаМарокИМоделей = ТаблицаМарокМоделей.Добавить();
		СтрокаМарокИМоделей.Марка 	= МассивЗначений[0];
		СтрокаМарокИМоделей.Модель 	= МассивЗначений[1];
		
	КонецЦикла;
	
	УдалитьФайлы(ВременныйКаталог);
	УдалитьФайлы(ВременныйФайл);
	
	ТаблицаМарки = ТаблицаМарокМоделей.Скопировать();
	ТаблицаМарки.Свернуть("Марка");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаМарки.Марка КАК Марка
		|ПОМЕСТИТЬ ВТ_Марки
		|ИЗ
		|	&ТаблицаМарки КАК ТаблицаМарки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Марки.Марка КАК Марка,
		|	ВЫБОР
		|		КОГДА Расш_МаркиАвтомобилей.Ссылка ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьВСправочнике
		|ПОМЕСТИТЬ ВТ_ОбъединениеВСправочнике
		|ИЗ
		|	ВТ_Марки КАК ВТ_Марки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Расш_МаркиАвтомобилей КАК Расш_МаркиАвтомобилей
		|		ПО ВТ_Марки.Марка = Расш_МаркиАвтомобилей.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОбъединениеВСправочнике.Марка КАК Марка
		|ИЗ
		|	ВТ_ОбъединениеВСправочнике КАК ВТ_ОбъединениеВСправочнике
		|ГДЕ
		|	НЕ ВТ_ОбъединениеВСправочнике.ЕстьВСправочнике";
	
	Запрос.УстановитьПараметр("ТаблицаМарки", ТаблицаМарки);
	Результат 	= Запрос.Выполнить();
	Выборка 	= Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Объект_Марка = Справочники.Расш_МаркиАвтомобилей.СоздатьЭлемент();
		Объект_Марка.Наименование = Выборка.Марка;
		Объект_Марка.Записать();
		
	КонецЦикла;  
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаМаркиИМодели.Марка КАК Марка,
		|	ТаблицаМаркиИМодели.Модель КАК Модель
		|ПОМЕСТИТЬ ВТ_МаркиИМодели
		|ИЗ
		|	&ТаблицаМаркиИМодели КАК ТаблицаМаркиИМодели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Расш_МаркиАвтомобилей.Ссылка КАК Марка,
		|	ВТ_МаркиИМодели.Модель КАК Модель,
		|	ВЫБОР
		|		КОГДА Расш_МоделиАвтомобилей.Ссылка ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьВБазе
		|ПОМЕСТИТЬ ВТ_ОбъединениеСоСправочниками
		|ИЗ
		|	ВТ_МаркиИМодели КАК ВТ_МаркиИМодели
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Расш_МаркиАвтомобилей КАК Расш_МаркиАвтомобилей
		|		ПО (Расш_МаркиАвтомобилей.Наименование = ВТ_МаркиИМодели.Марка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Расш_МоделиАвтомобилей КАК Расш_МоделиАвтомобилей
		|		ПО (Расш_МоделиАвтомобилей.Наименование = ВТ_МаркиИМодели.Модель)
		|			И (Расш_МоделиАвтомобилей.Владелец.Наименование = ВТ_МаркиИМодели.Марка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ОбъединениеСоСправочниками.Марка КАК Марка,
		|	ВТ_ОбъединениеСоСправочниками.Модель КАК Модель
		|ИЗ
		|	ВТ_ОбъединениеСоСправочниками КАК ВТ_ОбъединениеСоСправочниками
		|ГДЕ
		|	НЕ ВТ_ОбъединениеСоСправочниками.ЕстьВБазе";
	
	Запрос.УстановитьПараметр("ТаблицаМаркиИМодели", ТаблицаМарокМоделей);
	
	Результат 	= Запрос.Выполнить();
	Выборка 	= Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Объект_Модель = Справочники.Расш_МоделиАвтомобилей.СоздатьЭлемент();
		Объект_Модель.Наименование 	= Выборка.Модель;
		Объект_Модель.Владелец		= Выборка.Марка;
		Объект_Модель.Записать();
		
	КонецЦикла; 
	
	ОбщегоНазначения.СообщитьПользователю("Список автомобилей успешно обновлен."); 
	
КонецПроцедуры
